// Generated by CoffeeScript 1.3.3
(function() {
  var UI, UIBase, UIText, UIWidget,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  UIBase = (function() {

    function UIBase(parent) {
      this.parent = parent;
      this.children = [];
    }

    UIBase.prototype.draw = function() {
      var child, endhtml, _i, _len, _ref;
      endhtml = "";
      _ref = this.children;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        child = _ref[_i];
        endhtml = endhtml + child.draw();
      }
      return endhtml;
    };

    return UIBase;

  })();

  UIWidget = (function(_super) {

    __extends(UIWidget, _super);

    function UIWidget() {
      return UIWidget.__super__.constructor.apply(this, arguments);
    }

    UIWidget.prototype.draw = function() {
      var child, cl, content, endhtml, x, y, _i, _len, _ref;
      cl = "class";
      x = 800;
      y = 600;
      content = "";
      _ref = this.children;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        child = _ref[_i];
        console.log(this.children);
        console.log(child);
        content = content + child.draw();
      }
      endhtml = "<div class=\"UIWidget\" id=\"class_" + cl + "\" height=\"" + x + "\" width=\"" + y + "\">" + content + "</div>";
      if (this.parent) {
        return this.parent.html(endhtml);
      } else {
        return $("body").html(endhtml);
      }
    };

    return UIWidget;

  })(UIBase);

  UIText = (function(_super) {

    __extends(UIText, _super);

    function UIText(text) {
      this.text = text;
    }

    UIText.prototype.draw = function() {
      return "<p>" + this.text + "</p>";
    };

    return UIText;

  })(UIBase);

  UI = {
    "UIWidget": UIWidget,
    "UIText": UIText
  };

  window.UI = UI;

}).call(this);
