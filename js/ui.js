// Generated by CoffeeScript 1.3.3
(function() {
  var UI, UIBase, UINavigation, UIRowLayout, UIText, UIWidget,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  UIBase = (function() {

    function UIBase(parent, padding) {
      this.parent = parent;
      this.padding = padding;
      this.children = [];
      this.parent = null;
      this.padding = this.padding || 10;
    }

    UIBase.prototype.draw = function() {
      var child, endhtml, _i, _len, _ref;
      endhtml = "";
      _ref = this.children;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        child = _ref[_i];
        endhtml = endhtml + child.draw();
      }
      return endhtml;
    };

    UIBase.prototype.set_parent = function(parent) {
      this.parent = parent;
    };

    UIBase.prototype.add_child = function(child) {
      this.children.push(child);
      return child.set_parent(this);
    };

    return UIBase;

  })();

  UIWidget = (function(_super) {

    __extends(UIWidget, _super);

    function UIWidget(xsize, ysize, padding) {
      this.xsize = xsize;
      this.ysize = ysize;
      this.padding = padding;
      this.padding = this.padding || 5;
      this.children = [];
    }

    UIWidget.prototype.draw = function() {
      var child, cl, content, endhtml, padding, x, y, _i, _len, _ref;
      cl = "class";
      padding = 5;
      x = this.xsize - (2 * padding);
      y = this.ysize - (2 * padding);
      content = "";
      _ref = this.children;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        child = _ref[_i];
        content = content + child.draw();
      }
      endhtml = "<div class=\"UIWidget\" id=\"class_" + cl + "\" style=\"height:" + y + "px;width:" + x + "px\" height=\"" + x + "\" width=\"" + y + "\">" + content + "</div>";
      if (this.parent) {
        return this.parent.html(endhtml);
      } else {
        return $("body").html(endhtml);
      }
    };

    return UIWidget;

  })(UIBase);

  UIText = (function(_super) {

    __extends(UIText, _super);

    function UIText(text) {
      this.text = text;
      this.text = this.text || "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.";
    }

    UIText.prototype.draw = function() {
      return "<p>" + this.text + "</p>";
    };

    return UIText;

  })(UIBase);

  UINavigation = (function(_super) {

    __extends(UINavigation, _super);

    function UINavigation(buttons) {
      this.buttons = buttons;
    }

    UINavigation.prototype.draw = function() {
      var button, ind, list, url, _i, _len, _ref;
      list = "<ul class=\"UINavigation\">";
      _ref = this.buttons;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        ind = _ref[_i];
        url = ind[0];
        button = ind[1];
        list = list + ("<li><a href=\"" + url + "\"> " + button + " </a></li>");
      }
      return list + "</ul>";
    };

    return UINavigation;

  })(UIBase);

  UIRowLayout = (function(_super) {

    __extends(UIRowLayout, _super);

    function UIRowLayout(rownr) {
      var i, _i, _ref;
      this.rownr = rownr;
      this.rows = [];
      for (i = _i = 1, _ref = this.rownr; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
        this.rows[i - 1] = new Array();
      }
    }

    UIRowLayout.prototype.draw = function() {
      var border_right, child, content, i, layout, xsize, _i, _j, _len, _ref, _ref1;
      console.log(this.rows);
      xsize = this.parent.xsize;
      layout = "<div class=\"rowlayout_" + this.rownr + "rows rows\" style=\"float:left\">";
      for (i = _i = 1, _ref = this.rownr; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
        content = "";
        console.log(i - 1);
        _ref1 = this.rows[i - 1];
        for (_j = 0, _len = _ref1.length; _j < _len; _j++) {
          child = _ref1[_j];
          console.log(child);
          content += child.draw();
        }
        border_right = "border_right";
        if (i === this.rownr) {
          border_right = "";
        }
        console.log(border_right, i);
        layout += "<div class=\"row_" + i + " row " + border_right + "\" style=\"\nwidth: " + (Math.floor(xsize / this.rownr) - this.parent.padding - 1) + "px; \npadding:" + (Math.floor(this.parent.padding / 2) - 2) + ";\n\">" + content + "</div>";
      }
      layout += "</div>";
      return layout;
    };

    UIRowLayout.prototype.set_row = function(row, content) {
      return this.rows[row].push(content);
    };

    return UIRowLayout;

  })(UIBase);

  UI = {
    "UIWidget": UIWidget,
    "UIText": UIText,
    "UINavigation": UINavigation,
    "UIRowLayout": UIRowLayout
  };

  window.UI = UI;

}).call(this);
